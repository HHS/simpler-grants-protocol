---
import { Code } from "@astrojs/starlight/components";
import { Tabs, TabItem } from "@astrojs/starlight/components";
import { readFileSync } from "fs";
import { join, dirname } from "path";

type CodeProps = {
  code?: string;
  file?: {
    path: string;
    startLine?: number;
    endLine?: number;
  };
};

interface Props {
  example?: CodeProps;
  jsonSchema?: CodeProps;
  typeSpec?: CodeProps;
  python?: CodeProps;
}

const { example, jsonSchema, typeSpec, python } = Astro.props;

const exampleCode = example ? extractCode(example) : null;
const jsonSchemaCode = jsonSchema ? extractCode(jsonSchema) : null;
const typeSpecCode = typeSpec ? extractCode(typeSpec) : null;
const pythonCode = python ? extractCode(python) : null;

function extractCode(props: CodeProps) {
  if (props.code) {
    return props.code;
  }
  if (props.file) {
    try {
      const websiteRoot = process.cwd();
      const repoRoot = dirname(websiteRoot);
      const filePath = join(repoRoot, props.file.path);
      const content = readFileSync(filePath, "utf-8");

      if (props.file.startLine || props.file.endLine) {
        const lines = content.split("\n");
        const start = props.file.startLine ? props.file.startLine - 1 : 0;
        const end = props.file.endLine ? props.file.endLine : lines.length;
        return lines.slice(start, end).join("\n");
      }

      return content;
    } catch (error) {
      throw new Error(`Error reading file ${props.file.path}: ${error}`);
    }
  }
  return null;
}
---

<Tabs>
  {
    exampleCode && (
      <TabItem label="Example">
        <p>A JSON example of this model.</p>
        <Code code={exampleCode} lang="json" />
      </TabItem>
    )
  }
  {
    jsonSchemaCode && (
      <TabItem label="JSON Schema">
        <p>The JSON Schema for this model.</p>
        <Code code={jsonSchemaCode} lang="yaml" />
      </TabItem>
    )
  }
  {
    typeSpecCode && (
      <TabItem label="TypeSpec">
        <p>The TypeSpec code for this model.</p>
        <Code code={typeSpecCode} lang="typespec" />
      </TabItem>
    )
  }
  {
    pythonCode && (
      <TabItem label="Python">
        <p>The Python code for this model.</p>
        <Code code={pythonCode} lang="python" />
      </TabItem>
    )
  }
</Tabs>
