---
import config from "virtual:starlight/user-config";

import LanguageSelect from "@astrojs/starlight/components/LanguageSelect.astro";
import Search from "@astrojs/starlight/components/Search.astro";
import SiteTitle from "@astrojs/starlight/components/SiteTitle.astro";
import SocialIcons from "@astrojs/starlight/components/SocialIcons.astro";
import ThemeSelect from "@astrojs/starlight/components/ThemeSelect.astro";
import MobileMenuToggle from "@astrojs/starlight/components/MobileMenuToggle.astro";
import { LinkButton } from "@astrojs/starlight/components";
import NavMenuItem from "../NavMenuItem.astro";

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
  config.pagefind ||
  config.components.Search !== "@astrojs/starlight/components/Search.astro";

// Get CTA configuration from Starlight config
const ctaConfig = {
  text: "Get in touch",
  url: "https://forms.gle/XUJuEnNtaZkdc1MQ6",
};
const NavMenuItems = [
  {
    label: "Learn more",
    items: [
      { label: "Getting started", href: "/getting-started" },
      { label: "About CommonGrants", href: "/about" },
      { label: "Form library", href: "/forms/library" },
    ],
  },
  {
    label: "Protocol",
    items: [
      { label: "Specification", href: "/protocol/specification" },
      { label: "OpenAPI docs", href: "/protocol/api-docs" },
      { label: "Types", href: "/protocol/types" },
      { label: "Fields", href: "/protocol/fields" },
      { label: "Models", href: "/protocol/models" },
    ],
  },
  {
    label: "Guides",
    items: [
      { label: "Using Python", href: "/guides/using-python" },
      { label: "Using TypeScript", href: "/guides/using-typescript" },
    ],
  },
];
---

<div class="header">
  <div class="title-wrapper sl-flex">
    <SiteTitle />
  </div>
  <div class="sl-flex print:hidden search-container">
    {shouldRenderSearch && <Search />}
  </div>
  <div class="sl-hidden md:sl-flex print:hidden right-group">
    {
      NavMenuItems.map((item) => (
        <NavMenuItem label={item.label} items={item.items ?? []} />
      ))
    }
    <div class="sl-flex social-icons">
      <SocialIcons />
    </div>
    <ThemeSelect />
    <LanguageSelect />
    {
      ctaConfig && (
        <LinkButton
          href={ctaConfig.url}
          variant="primary"
          class="header-link-button"
        >
          {ctaConfig.text}
        </LinkButton>
      )
    }
    <MobileMenuToggle />
  </div>
</div>

<style>
  @layer starlight.core {
    .search-container {
      max-width: 10rem;
    }

    .header {
      display: flex;
      gap: var(--sl-nav-gap);
      justify-content: space-between;
      align-items: center;
      height: 100%;
    }

    .title-wrapper {
      /* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
      overflow: clip;
      /* Avoid clipping focus ring around link inside title wrapper. */
      padding: 0.25rem;
      margin: -0.25rem;
      min-width: 0;
    }

    .right-group,
    .social-icons {
      gap: 1rem;
      align-items: center;
    }
    .social-icons::after {
      content: "";
      height: 2rem;
      border-inline-end: 1px solid var(--sl-color-gray-5);
    }

    @media (min-width: 50rem) {
      :global(:root[data-has-sidebar]) {
        --__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
      }
      :global(:root:not([data-has-toc])) {
        --__toc-width: 0rem;
      }
      .header {
        --__sidebar-width: max(
          0rem,
          var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x)
        );
        --__main-column-fr: calc(
          (
              100% + var(--__sidebar-pad, 0rem) -
                var(--__toc-width, var(--sl-sidebar-width)) -
                (2 * var(--__toc-width, var(--sl-nav-pad-x))) -
                var(--sl-content-inline-start, 0rem) - var(--sl-content-width)
            ) /
            2
        );
        display: grid;
        grid-template-columns:
        /* 1 (site title): runs up until width of the title */
          minmax(
            calc(max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))),
            auto
          )
          /* 2 (search box): all free space that is available. */
          1fr
          /* 3 (right items): use the space that these need. */
          auto;
        align-content: center;
      }
    }

    .header-link-button {
      font-size: 0.9rem;
      padding: 0.3em 0.9em;
      height: 2.75rem;
      min-height: unset;
    }
  }
</style>
