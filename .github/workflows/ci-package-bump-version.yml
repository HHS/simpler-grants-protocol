name: CI - Bump Version of Package

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "lib/**"
      - ".github/workflows/ci-package-bump-version.yml"

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Node.js dependencies
        run: pnpm install

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Install dependencies
        run: poetry install
        working-directory: lib/python-sdk
      
      - name: Detect if any changesets exist
        id: check_changesets
        run: |
          CHANGESET_FILES=$(find .changeset -type f -name "*.md" ! -name "README.md")
          if [ -z "$CHANGESET_FILES" ]; then
            echo "No changeset files found"
            echo "found=false" >> $GITHUB_OUTPUT
          else
            echo "Found changeset files: $CHANGESET_FILES"
            echo "found=true" >> $GITHUB_OUTPUT
            echo "changeset_files=$CHANGESET_FILES" >> $GITHUB_OUTPUT
          fi

      - name: Bump Python version using Poetry
        if: steps.check_changesets.outputs.found == 'true'
        run: |
          CHANGESET_FILES="${{ steps.check_changesets.outputs.changeset_files }}"
          CHANGES=$(grep '"common-grants-sdk":' $CHANGESET_FILES || true)
          if [ -z "$CHANGES" ]; then
            echo "No bump needed for Python package"
            exit 0
          elif echo "$CHANGES" | grep -q 'major'; then
            echo "Major bump needed for Python package"
            poetry version major --directory lib/python-sdk
          elif echo "$CHANGES" | grep -q 'minor'; then
            echo "Minor bump needed for Python package"
            poetry version minor --directory lib/python-sdk
          elif echo "$CHANGES" | grep -q 'patch'; then
            echo "Patch bump needed for Python package"
            poetry version patch --directory lib/python-sdk
          fi

      - name: Run changeset version for Node packages (including "fake" python packages)
        if: steps.check_changesets.outputs.found == 'true'
        run: |
          pnpm changeset version
          git status

      - name: Commit version bumps
        if: steps.check_changesets.outputs.found == 'true' && github.event_name != 'pull_request'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit --no-verify -m "chore: bump version [skip ci]" || echo "No changes to commit"
          git push

      - name: Tag Python package version
        if: steps.check_changesets.outputs.found == 'true' && github.event_name != 'pull_request'
        run: |
          PKG_NAME=$(poetry run tomlq -r .tool.poetry.name lib/python-sdk/pyproject.toml)
          PY_VERSION=$(poetry run tomlq -r .tool.poetry.version lib/python-sdk/pyproject.toml)
          git tag ${PKG_NAME}@${PY_VERSION}
          echo "Added tag: ${PKG_NAME}@${PY_VERSION}"

      - name: Tag Node packages
        if: steps.check_changesets.outputs.found == 'true' && github.event_name != 'pull_request'
        run: pnpm changeset tag

      - name: Push all tags
        if: steps.check_changesets.outputs.found == 'true' && github.event_name != 'pull_request'
        run: git push --tags
